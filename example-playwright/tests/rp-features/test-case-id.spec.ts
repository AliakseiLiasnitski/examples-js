import { test, expect } from '@playwright/test';
import { ReportingApi} from '@reportportal/agent-js-playwright';

const suiteName = 'Test case id reporting suite';

test.describe(suiteName,  () => {
  ReportingApi.addAttributes([
    {
      key: 'feature',
      value: 'test-case-id',
    },
    {
      value: 'demo',
    },
  ], suiteName);
  ReportingApi.setDescription('This suite demonstrates Test case id reporting. Please see the [docs](https://reportportal.io/docs/Test-case-ID%3Ewhat-is-it-test-case-id)', suiteName);

  test('should be failed. No manually provided Test case id', async ({ page, browserName }) => {
    ReportingApi.addAttributes([
      {
        key: 'feature',
        value: 'test-case-id',
      },
      {
        key: 'method',
        value: 'autogenerated',
      },
      {
        key: 'browser',
        value: browserName,
      },
      {
        value: 'demo',
      },
    ]);
    ReportingApi.setDescription(
      'This test should contain Test case id that will be generated automatically based on [codeRef](https://reportportal.io/docs/Test-case-ID%3Ewhat-does-happen-if-you-do-not-report-items-with-test-case-id-)',
    );

    await page.goto('https://playwright.dev/');
    const title = page.locator('.navbar__inner .navbar__title');
    await expect(title).toHaveText('wrong value');
  });

  test('should be passed. Test case id explicitly set via ReportingApi', async ({ page, browserName }) => {
    ReportingApi.addAttributes([
      {
        key: 'feature',
        value: 'test-case-id',
      },
      {
        key: 'method',
        value: 'reporting-api',
      },
      {
        key: 'browser',
        value: browserName,
      },
      {
        value: 'demo',
      },
    ]);
    ReportingApi.setDescription('This test should contain Test case id specified by user via ReportingApi');
    // set Test case id manually
    ReportingApi.setTestCaseId('myCustomTestIdentifier');

    await page.goto('https://playwright.dev/');
    const title = page.locator('.navbar__inner .navbar__title');
    await expect(title).toHaveText('Playwright');
  });
});
